'use client'

import { useEffect, useRef } from 'react'
import { signIn } from 'next-auth/react'

interface TelegramUser {
  id: number
  first_name: string
  last_name?: string
  username?: string
  photo_url?: string
  auth_date: number
  hash: string
}

interface TelegramLoginWidgetProps {
  botName: string
  onAuth?: (user: TelegramUser) => void
}

export default function TelegramLoginWidget({ 
  botName, 
  onAuth 
}: TelegramLoginWidgetProps) {
  const ref = useRef<HTMLDivElement>(null)

  useEffect(() => {
    // –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è callback
    ;(window as any).onTelegramAuth = async (user: TelegramUser) => {
      console.log('üîó Telegram auth successful:', user)
      
      try {
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ª–æ–≥–∏–Ω–∏–º—Å—è —á–µ—Ä–µ–∑ NextAuth
        const result = await signIn('telegram', {
          id: user.id.toString(),
          first_name: user.first_name,
          last_name: user.last_name || '',
          username: user.username || '',
          photo_url: user.photo_url || '',
          auth_date: user.auth_date.toString(),
          hash: user.hash,
          redirect: false
        })
        
        if (result?.ok) {
          console.log('‚úÖ NextAuth login successful')
          
          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ø—Ä–æ—Ñ–∏–ª—å
          window.location.href = '/profile'
        } else {
          console.error('‚ùå NextAuth login failed:', result?.error)
        }
        
        // –í—ã–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π callback –µ—Å–ª–∏ –µ—Å—Ç—å
        if (onAuth) {
          onAuth(user)
        }
      } catch (error) {
        console.error('‚ùå Error during auth:', error)
      }
    }

    // –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è Telegram Widget
    if (ref.current) {
      // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
      ref.current.innerHTML = ''
      
      // –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç
      const script = document.createElement('script')
      script.src = 'https://telegram.org/js/telegram-widget.js?8'
      script.setAttribute('data-telegram-login', botName)
      script.setAttribute('data-size', 'large')
      script.setAttribute('data-onauth', 'onTelegramAuth(user)')
      script.setAttribute('data-request-access', 'write')
      script.async = true
      
      ref.current.appendChild(script)
    }

    // Cleanup
    return () => {
      if ((window as any).onTelegramAuth) {
        delete (window as any).onTelegramAuth
      }
    }
  }, [botName, onAuth])

  return (
    <div className="telegram-login-widget">
      <div ref={ref} />
      <p className="text-sm text-gray-600 mt-2">
        üëÜ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤—ã—à–µ –¥–ª—è –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Telegram
      </p>
    </div>
  )
}